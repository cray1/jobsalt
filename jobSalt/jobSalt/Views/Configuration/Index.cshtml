@model jobSalt.Models.Config.SiteConfig
@using jobSalt.Models.Config

@Scripts.Render("/Scripts/jquery-ui-1.10.4-min.js")
@Scripts.Render("/Scripts/jquery.colorpicker.js")
@Styles.Render("/Content/jquery.colorpicker.css")
@Styles.Render("/Content/jquery-ui-1.10.4-min.css")


<div class="container-fluid header">
    <div class="container">
        <div class="university-logo pull-left"></div><h1>Configuration</h1>
    </div>
    <div class="header-input"></div>
</div>
<div class="container">
    @using (Html.BeginForm("SaveConfig", "Configuration"))
{
    <div class="row" style="margin-top: 25px; margin-bottom:25px">
        <div class="col-xs-8">
            <div class="post">
                <h3>Theme</h3>
                <table>
                    <tr><td><h4 style="margin: 0 10px 0 0;">Custom CSS: </h4></td><td>@Html.TextBoxFor(model => model.UniversityThemeCSSFile, new { @class = "form-control" })</td></tr>
                    <tr><td><h4 style="margin: 0 10px 0 0;">University Logo: </h4></td><td>@Html.TextBoxFor(model => model.UniversityLogo, new { @class = "form-control" })</td></tr>
                    <tr>
                        <td><h4 style="margin: 0 10px 0 0;">Banner Gradient: </h4></td>
                        <td>
                            <div class="input-group">
                                <span class="input-group-addon">#</span>
                                @Html.TextBoxFor(model => model.BannerTopColor, new { @class = "form-control cp-basic", placeholder = "Top Color" })
                            </div>
                        </td>
                        <td>
                            <div class="input-group">
                                <span class="input-group-addon">#</span>
                                @Html.TextBoxFor(model => model.BannerBottomColor, new { @class = "form-control cp-basic", placeholder = "Bottom Color" })
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td><h4 style="margin: 0 10px 0 0;">Filter Active Gradient: </h4></td>
                        <td>
                            <div class="input-group">
                                <span class="input-group-addon">#</span>
                                @Html.TextBoxFor(model => model.FilterEnabledTopColor, new { @class = "form-control cp-basic", placeholder = "Top Color" })
                            </div>
                        </td>
                        <td>
                            <div class="input-group">
                                <span class="input-group-addon">#</span>
                                @Html.TextBoxFor(model => model.FilterEnabledBottomColor, new { @class = "form-control cp-basic", placeholder = "Bottom Color" })
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td><h4 style="margin: 0 10px 0 0;">Filter Inactive Gradient: </h4></td>
                        <td>
                            <div class="input-group">
                                <span class="input-group-addon">#</span>
                                @Html.TextBoxFor(model => model.FilterDisabledTopColor, new { @class = "form-control cp-basic", placeholder = "Top Color" })
                            </div>
                        </td>
                        <td>
                            <div class="input-group">
                                <span class="input-group-addon">#</span>
                                @Html.TextBoxFor(model => model.FilterDisabledBottomColor, new { @class = "form-control cp-basic", placeholder = "Bottom Color" })
                            </div>
                        </td>
                    </tr>
                </table>
            </div>
        </div>
    </div>
    <div class="row" style="margin-top: 25px; margin-bottom:25px">
        <div class="col-xs-4">
            <div class="post">
                <h3>Enable/Disable Features</h3>
                <table>
                    <tr><td><h4 style="margin: 0 10px 0 0;">Alumni: </h4></td><td>@Html.CheckBoxFor(model => model.AlumniEnabled)</td></tr>
                    <tr><td><h4 style="margin: 0 10px 0 0;">Salary: </h4></td><td>@Html.CheckBoxFor(model => model.SalaryEnabled)</td></tr>
                    <tr><td><h4 style="margin: 0 10px 0 0; ">Housing: </h4></td><td>@Html.CheckBoxFor(model => model.HousingEnabled)</td></tr>
                </table>
            </div>
        </div>

        <div class="col-xs-4">
            <div class="post">
                <h3>Twitter</h3><br />
                <table>
                    <tr><td><h4 style="margin: 0 10px 0 0;">Enabled: </h4></td><td>@Html.CheckBoxFor(model => model.TwitterFeedEnabled)</td></tr>
                    <tr><td><h4 style="margin: 0 10px 0 0;">Twitter User: </h4></td><td>@Html.TextBoxFor(model => model.TwitterUser, new { @class = "form-control" })</td></tr>
                    <tr><td><h4 style="margin: 0 10px 0 0; ">Twitter Widget ID: </h4></td><td>@Html.TextBoxFor(model => model.TwitterWidgetID, new { @class = "form-control" })</td></tr>
                </table>
            </div>
        </div>
    </div>
        <div class="row" style="margin-top: 25px; margin-bottom:25px">
            <div class="col-xs-4">
                <div class="post">
                    <h3>Jobs DB Connection</h3><br />
                    <table>
                        <tr><td><h4 style="margin: 0 10px 0 0;">Data Source: </h4></td><td>@Html.TextBoxFor(model => model.JobsDBConnection.DataSource, new { @class = "form-control" })</td></tr>
                        <tr><td><h4 style="margin: 0 10px 0 0;">Initial Catalog: </h4></td><td>@Html.TextBoxFor(model => model.JobsDBConnection.InitialCatalog, new { @class = "form-control" })</td></tr>
                        <tr><td><h4 style="margin: 0 10px 0 0; ">Integrated Security: </h4></td><td>@Html.CheckBoxFor(model => model.JobsDBConnection.IntegratedSecuity)</td></tr>
                        <tr><td><h4 style="margin: 0 10px 0 0;">UserID: </h4></td><td>@Html.TextBoxFor(model => model.JobsDBConnection.UserId, new { @class = "form-control" })</td></tr>
                        <tr><td><h4 style="margin: 0 10px 0 0;">Password: </h4></td><td>@Html.PasswordFor(model => model.JobsDBConnection.Password, new { @class = "form-control", value = "PasswordJS" })</td></tr>
                    </table>
                </div>
            </div>
            <div class="col-xs-4">
                <div class="post">
                    <h3>Alumni DB Connection</h3><br />
                    <table>
                        <tr><td><h4 style="margin: 0 10px 0 0;">Data Source: </h4></td><td>@Html.TextBoxFor(model => model.AlumniDBConnection.DataSource, new { @class = "form-control" })</td></tr>
                        <tr><td><h4 style="margin: 0 10px 0 0;">Initial Catalog: </h4></td><td>@Html.TextBoxFor(model => model.AlumniDBConnection.InitialCatalog, new { @class = "form-control" })</td></tr>
                        <tr><td><h4 style="margin: 0 10px 0 0; ">Integrated Security: </h4></td><td>@Html.CheckBoxFor(model => model.AlumniDBConnection.IntegratedSecuity)</td></tr>
                        <tr><td><h4 style="margin: 0 10px 0 0;">UserID: </h4></td><td>@Html.TextBoxFor(model => model.AlumniDBConnection.UserId, new { @class = "form-control" })</td></tr>
                        <tr><td><h4 style="margin: 0 10px 0 0;">Password: </h4></td><td>@Html.PasswordFor(model => model.AlumniDBConnection.Password, new { @class = "form-control", value="PasswordJS"})</td></tr>
                    </table>
                </div>
            </div>
            <div class="col-xs-4">
                <div class="post">
                    <h3>Salary DB Connection</h3><br />
                    <table>
                        <tr><td><h4 style="margin: 0 10px 0 0;">Data Source: </h4></td><td>@Html.TextBoxFor(model => model.SalaryDBConnection.DataSource, new { @class = "form-control" })</td></tr>
                        <tr><td><h4 style="margin: 0 10px 0 0;">Initial Catalog: </h4></td><td>@Html.TextBoxFor(model => model.SalaryDBConnection.InitialCatalog, new { @class = "form-control" })</td></tr>
                        <tr><td><h4 style="margin: 0 10px 0 0; ">Integrated Security: </h4></td><td>@Html.CheckBoxFor(model => model.SalaryDBConnection.IntegratedSecuity)</td></tr>
                        <tr><td><h4 style="margin: 0 10px 0 0;">UserID: </h4></td><td>@Html.TextBoxFor(model => model.SalaryDBConnection.UserId, new { @class = "form-control" })</td></tr>
                        <tr><td><h4 style="margin: 0 10px 0 0;">Password: </h4></td><td>@Html.PasswordFor(model => model.SalaryDBConnection.Password, new { @class = "form-control", value = "PasswordJS" })</td></tr>
                    </table>
                </div>
            </div>
        </div>
        <div class="row" style="margin-top: 25px; margin-bottom:25px">
            <div class="col-xs-4">
                <div class="post">
                    <h3>Housing DB Connection</h3><br />
                    <table>
                        <tr><td><h4 style="margin: 0 10px 0 0;">Data Source: </h4></td><td>@Html.TextBoxFor(model => model.HousingDBConnection.DataSource, new { @class = "form-control" })</td></tr>
                        <tr><td><h4 style="margin: 0 10px 0 0;">Initial Catalog: </h4></td><td>@Html.TextBoxFor(model => model.HousingDBConnection.InitialCatalog, new { @class = "form-control" })</td></tr>
                        <tr><td><h4 style="margin: 0 10px 0 0; ">Integrated Security: </h4></td><td>@Html.CheckBoxFor(model => model.HousingDBConnection.IntegratedSecuity)</td></tr>
                        <tr><td><h4 style="margin: 0 10px 0 0;">UserID: </h4></td><td>@Html.TextBoxFor(model => model.HousingDBConnection.UserId, new { @class = "form-control" })</td></tr>
                        <tr><td><h4 style="margin: 0 10px 0 0;">Password: </h4></td><td>@Html.PasswordFor(model => model.HousingDBConnection.Password, new { @class = "form-control", value = "PasswordJS" })</td></tr>
                    </table>
                </div>
            </div>
            <div class="col-xs-4">
                <div class="post">
                    <h3>Enable/Disable Job Modules</h3>
                    @{var jobConfig = ConfigLoader.JobConfig;}
                    <table>
                        @for(int i=0; i < jobConfig.Modules.Count; i++)
                        {
                            
                            <tr><td><h4 style="margin: 0 10px 0 0;">@jobConfig.Modules[i].DisplayName: </h4>
                            </td>
                                <td>
                                    <input type="hidden" name="jobConfig.Modules[@i].Name" value="@jobConfig.Modules[i].Name" />
                                    <input type="hidden" name="jobConfig.Modules[@i].DisplayName" value="@jobConfig.Modules[i].DisplayName" />
                                    <input name="jobConfig.Modules[@i].Enabled" type="checkbox" value="@jobConfig.Modules[i].Enabled.ToString()"
                                           @if (jobConfig.Modules[i].Enabled) { <text> checked="checked" </text>   } />
                                </td>
                            </tr>    
                        }
                    </table>
                </div>
            </div>
            <div class="col-xs-4">
                <div class="post">
                    <h3>Enable/Disable Alumni Modules</h3>
                    @{var alumConfig = ConfigLoader.AlumniConfig;}
                    <table>
                        @for (int i = 0; i < alumConfig.Modules.Count; i++)
                        {

                            <tr>
                                <td>
                                    <h4 style="margin: 0 10px 0 0;">@alumConfig.Modules[i].DisplayName: </h4>
                                </td>
                                <td>
                                    <input type="hidden" name="alumConfig.Modules[@i].Name" value="@alumConfig.Modules[i].Name" />
                                    <input type="hidden" name="alumConfig.Modules[@i].DisplayName" value="@alumConfig.Modules[i].DisplayName" />
                                    <input name="alumConfig.Modules[@i].Enabled" type="checkbox" value="@alumConfig.Modules[i].Enabled.ToString()"
                                           @if (alumConfig.Modules[i].Enabled){ <text> checked="checked" </text>    } />
                                </td>
                            </tr>
                        }
                    </table>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-xs-4">
                <div class="post">
                    @{var authConfig = ConfigLoader.AuthenticationConfig;}
                    <h3>Authentication</h3><br />
                    Users names are newline seperated
                    <h4>Admin Users:</h4>
                    <textarea class="form-control" rows="6" draggable="false" name="authConfig.AdminUsers[0]">@String.Join("\n", authConfig.AdminUsers)</textarea>
                    <h4>Restrict Access to: (Empty for unrestricted)</h4>
                    <textarea class="form-control" rows="6" draggable="false" name="authConfig.RestrictAccessToUsers[0]">@String.Join("\n", authConfig.RestrictAccessToUsers)</textarea>
                </div>
            </div>
        </div>
        <input class="col-xs-offset-4 col-xs-4" type="submit" value="Save Changes" />
    }
</div>

<script type="text/javascript">
    $(document).ready(function () {
        $('.cp-basic').colorpicker();
    });
</script>